// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// cmEst_cpp
Rcpp::List cmEst_cpp(StringVector string_formula1, StringVector string_formula2, DataFrame data);
RcppExport SEXP _iRegression_cmEst_cpp(SEXP string_formula1SEXP, SEXP string_formula2SEXP, SEXP dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type string_formula1(string_formula1SEXP);
    Rcpp::traits::input_parameter< StringVector >::type string_formula2(string_formula2SEXP);
    Rcpp::traits::input_parameter< DataFrame >::type data(dataSEXP);
    rcpp_result_gen = Rcpp::wrap(cmEst_cpp(string_formula1, string_formula2, data));
    return rcpp_result_gen;
END_RCPP
}
// modmEst_cpp
List modmEst_cpp(StringVector variables1, StringVector variables2, DataFrame data);
RcppExport SEXP _iRegression_modmEst_cpp(SEXP variables1SEXP, SEXP variables2SEXP, SEXP dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type variables1(variables1SEXP);
    Rcpp::traits::input_parameter< StringVector >::type variables2(variables2SEXP);
    Rcpp::traits::input_parameter< DataFrame >::type data(dataSEXP);
    rcpp_result_gen = Rcpp::wrap(modmEst_cpp(variables1, variables2, data));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_iRegression_cmEst_cpp", (DL_FUNC) &_iRegression_cmEst_cpp, 3},
    {"_iRegression_modmEst_cpp", (DL_FUNC) &_iRegression_modmEst_cpp, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_iRegression(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
